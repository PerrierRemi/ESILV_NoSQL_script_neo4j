// Load companies.csv
load csv with headers from "file:/companies.csv" as l 
create(Companies:Companie{
name:l.name,
permalink:l.permalink,
crunchbase_url:l.crunchbase_url, 
homepage_url:l.homepage_url, 
blog_feed_url:l.blog_feed_url, 
twitter_username:l.twitter_username, 
number_of_employees:toInteger(l.number_of_employees), 
founded_year:toInteger(l.founded_year), 
founded_mont:toInteger(l.founded_month), 
founded_day:toInteger(l.founded_day), 
deadpooled_year:toInteger(l.deadpooled_year),
deadpooled_month:toInteger(l.deadpooled_month),
deadpooled_day:toInteger(l.deadpooled_day),
deadpooled_url:l.deadpooled_url,
email_adress:l.email_address,
phone_number:l.phone_numer,
description:l.description,
created_at:l.created_at,
updated_at:l.updated_at,
total_money_raised:l.total_money_raised});

// Load products.csv
load csv with headers from "file:/products.csv" as l
create(Products:Product{
name:l.name,
permalink:l.permalink});

// Load persons.csv
load csv with headers from "file:/persons.csv" as l
create(Persons:Person{
first_name:l.first_name,
last_name:l.last_name,
permalink:l.permalink});

// Load offices.csv
load csv with headers from "file:/offices.csv" as l
create(Offices:Office{
index:toInteger(l.index),
address1:l.address1,
address2:l.address2,
zip_code:l.zip_code,
state_code:l.state_code,
country_code:l.country_code
});

// Create index
create index on :Companie(permalink);
create index on :Product(permalink);
create index on :Person(permalink);
create index on :Office(index);

// Load companies_products.csv
load csv with headers from "file:/companies_products.csv" as l
merge(companie:Companie{permalink:l.companie_permalink})
merge(product:Product{permalink:l.product_permalink})
create (product) -[:is_produced_by] -> (companie)

// Load companies_persons.csv
load csv with headers from "file:/companies_persons.csv" as l
merge(companie:Companie{permalink:l.companie_permalink})
merge(person:Person{permalink:l.person_permalink})
create (person) -[:is_in_relationship_with 
{is_past:l.is_past, 
title:l.title}] 
-> (companie)

// Load companies_competitors.csv
load csv with headers from "file:/companies_competitors.csv" as l
merge(companie:Companie{permalink:l.companie_permalink})
merge(competitor:Companie{permalink:l.competitor_permalink})
create (companie) -[:is_in_competition_with]-> (competitor)

// Load companies_acquisitor.csv
load csv with headers from "file:/companies_acquisitor.csv" as l
merge(companie:Companie{permalink:l.companie_permalink})
merge(acquisitor:Companie{permalink:l.acquisitor_permalink})
create (companie) -[:acquired_by
{price_amount:toInteger(l.price_amount),
price_currency_code:l.price_currency_code,
term_code:l.term_code,
source_url:l.source_url,
source_description:l.source_description,
acquired_year:toInteger(l.acquired_year),
acquired_month:toInteger(l.acquired_month),
acquired_day:toInteger(l.acquired_day)}]
-> (acquisitor)

// Load companies_acquisitions.csv
load csv with headers from "file:/companies_acquisitions.csv" as l
merge(companie:Companie{permalink:l.companie_permalink})
merge(acquisition:Companie{permalink:l.acquisition_permalink})
create (acquisition) -[:acquired_by
{price_amount:toInteger(l.price_amount),
price_currency_code:l.price_currency_code,
term_code:l.term_code,
source_url:l.source_url,
source_description:l.source_description,
acquired_year:toInteger(l.acquired_year),
acquired_month:toInteger(l.acquired_month),
acquired_day:toInteger(l.acquired_day)}]
-> (companie)

// Load companies_offices.csv
load csv with headers from "file:/companies_offices.csv" as l
merge(companie:Companie{permalink:l.companie_permalink})
merge(office:Office{index:toInteger(l.office_index)})
create (companie) -[:is_based_in
{description:l.description}]
-> (office)